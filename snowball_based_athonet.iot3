iot3: 1.0.3
info:
  name: Snowball Based Athonet
  oem:
  model: 
  versions:
    - '11.1'
  documentation:
    description: 'Snowball Based Athonet'
  stage: alpha
  author: namira.mansuri@qeleo.com
  revision: 2
  created: '2022-05-03'
  updated: '2022-09-20'
  labels:  
    - Snowball Based
    - Athonet
global:
  auth:
    middleware_token: ''
    certificate: '${registration.vault.properties.certificate}'
    private_key: '${registration.vault.properties.private_key}'
  reg:
    url: 'https://${registration.form.properties.ip}:${registration.form.properties.port}'
    ip: '${registration.form.properties.ip}'
    port: '${registration.form.properties.port}'
    username: '${registration.vault.properties.username}'
    password: '${registration.vault.properties.password}'
registration:
  vaultId: vault_id
  fingerprint:
    - ip
    - port
    - vault_id
  form:
    properties:
      ip:
        type: string
        title: IP
        placeholder: IP Address
        description: The IP address of the device.
        key: ip
        required: true
      port:
        type: number
        inputType: number
        title: Port
        placeholder: Port
        description: The port number of the device.
        key: port
        required: true
        minimum: 1
        maximum: 65535
      vault_id:
        type: string
        title: Vault ID
        placeholder: Vault ID
        key: vault_id
        pattern: '^(cu\w{6})(-av\w{6})$'
        required: true
    required:
      - ip
      - port
      - vault_id
  vault:
    properties:
      username:
        type: string
        title: Username
        placeholder: Username
        key: username
        required: true
      password:
        type: string
        title: Password
        placeholder: Password
        key: password
        required: true
      certificate:
        type: string
        inputType: textarea
        title: Certificate
        placeholder: PEM encoded certificate
        key: certificate
        required: true
      private_key:
        type: string
        inputType: textarea
        title: Privtae key
        placeholder: PEM encoded private key
        key: private_key
        required: true
    required:
      - username
      - password
      - certificate
      - private_key
auth:
  http:
    actions:
      login:
        dataSource: '%{engine.http.requests.login}'
        requires:
          - middleware_token
        lookup:
          middleware_token:
            dataSource: '%{engine.http.requests.get_token}'
            selector:
              type: xpath
              expression: '//input[@name="csrfmiddlewaretoken"]/@value'
            dataSink: '%{global.auth.middleware_token}'
      logout:
        dataSource: '%{engine.http.requests.logout}'
        selector:
          type: static
          expression: 0
        dataSink: '%{global.auth.middleware_token}'
engine:
  tunnel:
    ssh:
      supported: false
      displayInstructions: {}
    http:
      supported: true
      displayInstructions:
        protocol: 'HTTPS'
  http:
    type: scrape
    configuration:
      followRedirects: "false"
      tls:
        certificates:
          - certificate: ${global.auth.certificate}
            privateKey: ${global.auth.private_key}
    requests:
      get_token:        #done
        method: GET
        uri: '${global.reg.url}/login/?next=/'
        contentType: 'text/html; charset=utf-8'
        header:
          referer: ['${global.reg.url}/login/?next=/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      login:
        method: POST
        uri: '${global.reg.url}/login/?next=/'
        contentType: 'text/html; charset=utf-8'
        encoding: 'application/x-www-form-urlencoded'
        header:
          referer: ['${global.reg.url}/login/?next=/']
        body:
          csrfmiddlewaretoken: '${global.auth.middleware_token}'
          username: '${global.reg.username}'
          password: '${global.reg.password}'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '302'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!302)
      logout:
        method: GET
        uri: '${global.reg.url}/logout/'
        contentType: 'text/html; charset=utf-8'
        header:
          referer: ['${global.reg.url}/logout/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '302'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!302)
      get_usims: # Subscribers USIMs
        method: GET
        uri: '${global.reg.url}/hss/usims/'
        header:
          referer: ['${global.reg.url}/hss/usims/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_system_traps: #system traps
        method: GET
        uri: '${global.reg.url}/mogw/monitor/traps/'
        header:
          referer: ['${global.reg.url}/mogw/monitor/traps/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_hss_statistics: # Subscribers HSS
        method: GET
        uri: '${global.reg.url}/hss/statistics/'
        header:
          referer: ['${global.reg.url}/hss/statistics/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_usims_profile:
        method: GET
        uri: '${global.reg.url}/hss/s6/usim-profiles/'
        header:
          referer: ['${global.reg.url}/hss/s6/usim-profiles/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_apn_profile:
        method: GET
        uri: '${global.reg.url}/hss/s6/apn-profiles/'
        header:
          referer: ['${global.reg.url}/hss/s6/apn-profiles/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_processes:
        method: GET
        uri: '${global.reg.url}/mogw/monitor/processes/'
        header:
          referer: ['${global.reg.url}/mogw/monitor/processes/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_stats:
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/stats'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_mme:       #MME call
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/lte'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_hlr_hss:   # Provisioned ,local host name
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/hss'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_machine:      #hardware uptime,cpu and storage utilised
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/machine'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_local_time:
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/license'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_s1_interfaces: # s1 interfaces
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/lte/interfaces'
        contentType: 'application/json'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_monitor_apn:  #APN(Access Point Name)
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/apns'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_counters:  #counters
        method: GET
        uri: '${global.reg.url}/mogw/monitor/counters/'
        contentType: 'text/html; charset=utf-8'
        header:
          referer: ['${global.reg.url}/mogw/monitor/counters/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
      get_diameter:  # MME local_host,ip,status
        method: GET
        uri: '${global.reg.url}/mogw/API/monitor/diameter'
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_hardware:     # manufacturer,product and host name
        method: GET
        uri: '${global.reg.url}/mogw/'
        contentType: 'text/html; charset=utf-8'
        header:
          referer: ['${global.reg.url}/mogw/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
      get_sanity:       # KPIs of monitor
        method: GET
        uri: '${global.reg.url}/ajax/sanity/'
        header:
          referer: ['${global.reg.url}/ajax/sanity/']
        responses:
          success:
            - dataSource: header
              expression: Status-Code
              match: '200'
          failure:
            - dataSource: header
              expression: Status-Code
              match: ^(?!200)
topology:
  rootType: system
  verify: null
  wrapperType: ''
  nodes: false

template:
  types:
    system:
      name: System
      version: 11.1
      attributes:
        - subscribers_usims_name
        - subscribers_usims_imsi
        - subscribers_usims_usim_profile
        - subscribers_usims_status
        - system_trap_timestamp
        - system_trap_sender_hostname
        - system_trap_type
        - subscribers_hss_statistics_no_of_provisioned_usims
        - subscribers_hss_statistics_no_of_provisioned_usims_profiles
        - subscribers_hss_statistics_no_of_provisioned_apn_profiles
        - subscribers_hss_statistics_no_of_provisioned_qos_templates_4g
        - subscribers_service_profiles_usim_profile_name_1
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_1
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_1
        - subscribers_service_profiles_usim_profile_roaming_status_1
        - subscribers_service_profiles_usim_profile_name_2
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_2
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_2
        - subscribers_service_profiles_usim_profile_roaming_status_2
        - subscribers_service_profiles_usim_profile_name_3
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_3
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_3
        - subscribers_service_profiles_usim_profile_roaming_status_3
        - subscribers_service_profiles_usim_profile_name_4
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_4
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_4
        - subscribers_service_profiles_usim_profile_roaming_status_4
        - subscribers_service_profiles_usim_profile_name_5
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_5
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_5
        - subscribers_service_profiles_usim_profile_roaming_status_5
        - subscribers_service_profiles_usim_profile_name_6
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_6
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_6
        - subscribers_service_profiles_usim_profile_roaming_status_6
        - subscribers_service_profiles_usim_profile_name_7
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_7
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_7
        - subscribers_service_profiles_usim_profile_roaming_status_7
        - subscribers_service_profiles_usim_profile_name_8
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_8
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_8
        - subscribers_service_profiles_usim_profile_roaming_status_8
        - subscribers_service_profiles_usim_profile_name_9
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_9
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_9
        - subscribers_service_profiles_usim_profile_roaming_status_9
        - subscribers_service_profiles_usim_profile_name_10
        - subscribers_service_profiles_usim_profile_ue_ambr_ul_10
        - subscribers_service_profiles_usim_profile_ue_ambr_dl_10
        - subscribers_service_profiles_usim_profile_roaming_status_10
        - subscribers_service_profiles_apn_profile_name_1
        - subscribers_service_profiles_apn_profile_apn_1
        - subscribers_service_profiles_apn_profile_qos_4g_1
        - subscribers_service_profiles_apn_profile_name_2
        - subscribers_service_profiles_apn_profile_apn_2
        - subscribers_service_profiles_apn_profile_qos_4g_2
        - subscribers_service_profiles_apn_profile_name_3
        - subscribers_service_profiles_apn_profile_apn_3
        - subscribers_service_profiles_apn_profile_qos_4g_3
        - subscribers_service_profiles_apn_profile_name_4
        - subscribers_service_profiles_apn_profile_apn_4
        - subscribers_service_profiles_apn_profile_qos_4g_4
        - subscribers_service_profiles_apn_profile_name_5
        - subscribers_service_profiles_apn_profile_apn_5
        - subscribers_service_profiles_apn_profile_qos_4g_5
        - subscribers_service_profiles_apn_profile_name_6
        - subscribers_service_profiles_apn_profile_apn_6
        - subscribers_service_profiles_apn_profile_qos_4g_6
        - subscribers_service_profiles_apn_profile_name_7
        - subscribers_service_profiles_apn_profile_apn_7
        - subscribers_service_profiles_apn_profile_qos_4g_7
        - subscribers_service_profiles_apn_profile_name_8
        - subscribers_service_profiles_apn_profile_apn_8
        - subscribers_service_profiles_apn_profile_qos_4g_8
        - subscribers_service_profiles_apn_profile_name_9
        - subscribers_service_profiles_apn_profile_apn_9
        - subscribers_service_profiles_apn_profile_qos_4g_9
        - subscribers_service_profiles_apn_profile_name_10
        - subscribers_service_profiles_apn_profile_apn_10
        - subscribers_service_profiles_apn_profile_qos_4g_10
        - monitor_system_legacy_mme_active_users
        - monitor_system_legacy_mme_active_sessions
        - monitor_system_legacy_mme_active_radio_interfaces
        - monitor_system_emme_active_users
        - monitor_system_emme_active_radio_interfaces
        - monitor_system_total_dl
        - monitor_system_total_ul
        - monitor_legacy_mme_connected_user
        - monitor_legacy_mme_idle_user
        - monitor_legacy_mme_traffic_ul
        - monitor_legacy_mme_traffic_dl
        - monitor_hlr_hss_authentication_request
        - monitor_hlr_hss_location_updates
        - monitor_hlr_hss_provisioned_users
        - monitor_hlr_hss_registered_users
        - monitor_hardware_cpu_utilised
        - monitor_hardware_cpu_load_avg_per_1m
        - monitor_hardware_cpu_load_avg_per_5m
        - monitor_hardware_cpu_load_avg_per_15m
        - monitor_hardware_ram_used
        - monitor_hardware_ram_utilised
        - monitor_hardware_ram_capacity
        - monitor_hardware_storage_used
        - monitor_hardware_storage_capacity
        - monitor_hardware_storage_utilised
        #- monitor_hardware_storage_shared_used
        #- monitor_hardware_storage_shared_capacity
        #- monitor_hardware_storage_shared_utilised
        - monitor_hardware_local_time
        - monitor_legacy_mme_s1_interfaces_local_host_name
        - monitor_legacy_mme_s1_interfaces_primary_local_ip
        - monitor_legacy_mme_s1_interfaces_enodeb_id
        - monitor_legacy_mme_s1_interfaces_connected_users
        - monitor_apn_total_ul
        - monitor_apn_total_dl
        - monitor_apn_total_traffic
        - monitor_apn_apns_traffic_name_1
        - monitor_apn_apns_traffic_throughput_ul_1
        - monitor_apn_apns_traffic_throughput_dl_1
        - monitor_apn_apns_traffic_ul_1
        - monitor_apn_apns_traffic_dl_1
        - monitor_apn_apns_traffic_total_traffic_1
        - monitor_apn_apns_traffic_name_2
        - monitor_apn_apns_traffic_throughput_ul_2
        - monitor_apn_apns_traffic_throughput_dl_2
        - monitor_apn_apns_traffic_ul_2
        - monitor_apn_apns_traffic_dl_2
        - monitor_apn_apns_traffic_total_traffic_2
        - monitor_apn_apns_traffic_name_3
        - monitor_apn_apns_traffic_throughput_ul_3
        - monitor_apn_apns_traffic_throughput_dl_3
        - monitor_apn_apns_traffic_ul_3
        - monitor_apn_apns_traffic_dl_3
        - monitor_apn_apns_traffic_total_traffic_3
        - monitor_apn_apns_traffic_name_4
        - monitor_apn_apns_traffic_throughput_ul_4
        - monitor_apn_apns_traffic_throughput_dl_4
        - monitor_apn_apns_traffic_ul_4
        - monitor_apn_apns_traffic_dl_4
        - monitor_apn_apns_traffic_total_traffic_4
        - monitor_apn_apns_traffic_name_5
        - monitor_apn_apns_traffic_throughput_ul_5
        - monitor_apn_apns_traffic_throughput_dl_5
        - monitor_apn_apns_traffic_ul_5
        - monitor_apn_apns_traffic_dl_5
        - monitor_apn_apns_traffic_total_traffic_5
        - total_counters
        - connected_counters
        - idle_counters
        - deregistered_counters
        - total_load_dl_counters
        - total_load_ul_counters
        - active_sessions_counters
        - attach_reject_plmn_not_allowed_counters
        - attach_reject_roaming_not_allowed_counters
        - attach_reject_illegal_ms_counters
        - total_attach_request_counters
        - successful_attach_counters
        - successful_attach_rate_counters
        - total_session_activation_request_counters
        - successful_activated_sessions_counters
        - successful_session_rate_counters
        - session_request_reject_resource_unav_counters
        - session_request_reject_unknown_apn_counters
        - session_request_reject_service_not_sub_counters
        - last_reset_counters
        - monitor_legacy_mme_diameter_local_host_name
        - monitor_legacy_mme_diameter_primary_local_ip
        - monitor_legacy_mme_diameter_primary_remote_ip
        - monitor_legacy_mme_diameter_transport_type
        - monitor_legacy_mme_diameter_transport_status
        - monitor_legacy_mme_diameter_status
        - monitor_hlr_hss_diameter_local_host_name
        - monitor_hlr_hss_diameter_primary_local_ip
        - monitor_hlr_hss_diameter_primary_remote_ip
        - monitor_hlr_hss_diameter_transport_type
        - monitor_hlr_hss_diameter_transport_status
        - monitor_hlr_hss_diameter_status
        - monitor_hardware_manufacturer
        - monitor_hardware_products_name
        - monitor_hardware_host_name
        - monitor_system_revision
        - monitor_system_license_status
        - monitor_hardware_uptime
        - monitor_system_license_status_alarm
        - monitor_system_processes_dra_alarm
        - monitor_system_processes_legacy_mme_alarm #Added legacy mme
        - monitor_system_processes_cgw_alarm
        - monitor_system_processes_sgw_alarm
        - monitor_system_processes_cbc_alarm
        - monitor_system_processes_pcrf_alarm
        - monitor_system_processes_ggsn_pgw_alarm
        - monitor_system_processes_sms_proxy_alarm
        - monitor_system_processes_user_plane_alarm
        - monitor_system_processes_hlr_hss_alarm
        - monitor_system_processes_stats_manager_alarm
        - monitor_system_processes_snmp_subagent_alarm
        - processes_dra_alarm
        - processes_emme_alarm
        - processes_legacy_mme_alarm
        - processes_cbc_alarm
        - processes_pcrf_alarm
        - processes_cgw_alarm
        - processes_sgw_alarm
        - processes_ggsn_pgw_alarm
        - processes_sms_proxy_alarm
        - processes_user_plane_alarm
        - processes_hlr_hss_alarm
        - processes_snmp_sub_agent_alarm
        - processes_stats_manager_alarm
        - monitor_hlr_hss_diameter_alarm
        - monitor_hlr_hss_diameter_transport_alarm
        - monitor_legacy_mme_diameter_transport_alarm
        - monitor_legacy_mme_diameter_alarm 
        - monitor_legacy_mme_s1_interfaces_link_status_alarm
        - monitor_legacy_mme_s1_interfaces_s1_ap_status_alarm
      alarms:
        monitor_system_license_status_alarm:
          attribute: monitor_system_license_status_alarm
          mapper: '%{template.filters.mappers.license_alarm}'
        monitor_system_processes_dra_alarm:
          attribute: monitor_system_processes_dra_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_legacy_mme_alarm:
          attribute: monitor_system_processes_legacy_mme_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_cgw_alarm:
          attribute: monitor_system_processes_cgw_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_sgw_alarm:
          attribute: monitor_system_processes_sgw_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_cbc_alarm:
          attribute: monitor_system_processes_cbc_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_pcrf_alarm:
          attribute: monitor_system_processes_pcrf_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_ggsn_pgw_alarm:
          attribute: monitor_system_processes_ggsn_pgw_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_sms_proxy_alarm:
          attribute: monitor_system_processes_sms_proxy_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_user_plane_alarm:
          attribute: monitor_system_processes_user_plane_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_hlr_hss_alarm:
          attribute: monitor_system_processes_hlr_hss_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_stats_manager_alarm:
          attribute: monitor_system_processes_stats_manager_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        monitor_system_processes_snmp_subagent_alarm:
          attribute: monitor_system_processes_snmp_subagent_alarm
          mapper: '%{template.filters.mappers.system_processes_alarm}'
        processes_dra_alarm:
          attribute: processes_dra_alarm
          mapper: '%{template.filters.mappers.alarm_1}'
        processes_emme_alarm:
          attribute: processes_emme_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_legacy_mme_alarm:
          attribute: processes_legacy_mme_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_cbc_alarm:
          attribute: processes_cbc_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_pcrf_alarm:
          attribute: processes_pcrf_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_cgw_alarm:
          attribute: processes_cgw_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_sgw_alarm:
          attribute: processes_sgw_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_ggsn_pgw_alarm:
          attribute: processes_ggsn_pgw_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_sms_proxy_alarm:
          attribute: processes_sms_proxy_alarm
          mapper: '%{template.filters.mappers.alarm_1}'
        processes_user_plane_alarm:
          attribute: processes_user_plane_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_hlr_hss_alarm:
          attribute: processes_hlr_hss_alarm
          mapper: '%{template.filters.mappers.alarm_2}'
        processes_snmp_sub_agent_alarm:
          attribute: processes_snmp_sub_agent_alarm
          mapper: '%{template.filters.mappers.alarm_1}'
        processes_stats_manager_alarm:
          attribute: processes_stats_manager_alarm
          mapper: '%{template.filters.mappers.alarm_1}'
        monitor_hlr_hss_diameter_alarm:
          attribute: monitor_hlr_hss_diameter_alarm
          mapper: '%{template.filters.mappers.diameter_alarm}'
        monitor_hlr_hss_diameter_transport_alarm:
          attribute: monitor_hlr_hss_diameter_transport_alarm
          mapper: '%{template.filters.mappers.diameter_alarm}'
        monitor_legacy_mme_diameter_transport_alarm:
          attribute: monitor_legacy_mme_diameter_transport_alarm
          mapper: '%{template.filters.mappers.diameter_alarm}'
        monitor_legacy_mme_diameter_alarm:
          attribute: monitor_legacy_mme_diameter_alarm
          mapper: '%{template.filters.mappers.diameter_alarm}'
        monitor_legacy_mme_s1_interfaces_link_status_alarm:
          attribute: monitor_legacy_mme_s1_interfaces_link_status_alarm
          mapper: '%{template.filters.mappers.s1_ap_alarm}'
        monitor_legacy_mme_s1_interfaces_s1_ap_status_alarm:
          attribute: monitor_legacy_mme_s1_interfaces_s1_ap_status_alarm
          mapper: '%{template.filters.mappers.s1_ap_alarm}'
      price:
        value: 0
        unit: USD
      energy:
        value: 0
        unit: ''
  attributes:
    monitor_hardware_uptime:
      name: Monitor Hardware Uptime
      description: Monitor Hardware Uptime
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]uptime[>]).*?(?=[<][/]uptime[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: div 100
            2: formatFloat f 0
            3: formatDuration
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_usims_name:
      name: Subscribers Usims Name
      description: Subscribers Usims Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]//td[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_usims_imsi:
      name: Subscribers Usims IMSI
      description: Subscribers Usims IMSI
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims}'
        requires: []
        selector:
          type: xpath
          expression: '//*[@name="imsi"][2]/@value'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_usims_usim_profile:
      name: Subscribers Usims Usim Profile
      description: Subscribers Usims Usim Profile
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]//td[3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_usims_status:
      name: Subscribers Usims Status
      description: Subscribers Usims Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims}'
        requires: []
        selector:
          type: xpath
          expression: '//button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    system_trap_timestamp:
      name: System Trap Timestamp
      description: System Trap Timestamp
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_system_traps}'
        requires: []
        selector:
          type: xpath
          expression: '//th[contains(text(),"Creation")]/../../../tbody/tr[1]/td[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    system_trap_sender_hostname:
      name: System Trap Sender Hostname
      description: System Trap Sender Hostname
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_system_traps}'
        requires: []
        selector:
          type: xpath
          expression: '//th[contains(text(),"Creation")]/../../../tbody/tr[1]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    system_trap_type:
      name: System Trap Type
      description: System Trap Type
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_system_traps}'
        requires: []
        selector:
          type: xpath
          expression: '//th[contains(text(),"Creation")]/../../../tbody/tr[1]/td[3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_hss_statistics_no_of_provisioned_usims:
      name: Subscribers HSS Statistics No Of Provisioned Usims
      description: Subscribers HSS Statistics No Of Provisioned Usims
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hss_statistics}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract (^\d) => $1
          mapper: '%{template.filters.mappers.state}'
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_hss_statistics_no_of_provisioned_usims_profiles:
      name: Subscribers HSS Statistics No Of Provisioned Usims Profiles
      description: Subscribers HSS Statistics No Of Provisioned Usims Profiles
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hss_statistics}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_hss_statistics_no_of_provisioned_apn_profiles:
      name: Subscribers HSS Statistics No Of Provisioned Apn profiles
      description: Subscribers HSS Statistics No Of Provisioned Apn profiles
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hss_statistics}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_hss_statistics_no_of_provisioned_qos_templates_4g:
      name: Subscribers HSS Statistics No Of Provisioned Qos Templates 4g
      description: Subscribers HSS Statistics No Of Provisioned Qos Templates 4g
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hss_statistics}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_1:
      name: Subscribers Service Profiles Usim Profile Name 1
      description: Subscribers Service Profiles Usim Profile Name 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_1:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 1
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_1:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 1
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_1:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 1
      description: Subscribers Service Profiles USIMs Profile Roaming Status 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_2:
      name: Subscribers Service Profiles Usim Profile Name 2
      description: Subscribers Service Profiles Usim Profile Name 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_2:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 2
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_2:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 2
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_2:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 2
      description: Subscribers Service Profiles USIMs Profile Roaming Status 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_3:
      name: Subscribers Service Profiles Usim Profile Name 3
      description: Subscribers Service Profiles Usim Profile Name 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_3:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 3
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_3:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 3
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_3:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 3
      description: Subscribers Service Profiles USIMs Profile Roaming Status 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_4:
      name: Subscribers Service Profiles Usim Profile Name 4
      description: Subscribers Service Profiles Usim Profile Name 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_4:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 4
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_4:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 4
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_4:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 4
      description: Subscribers Service Profiles USIMs Profile Roaming Status 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_5:
      name: Subscribers Service Profiles Usim Profile Name 5
      description: Subscribers Service Profiles Usim Profile Name 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_5:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 5
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_5:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 5
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_5:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 5
      description: Subscribers Service Profiles USIMs Profile Roaming Status 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_6:
      name: Subscribers Service Profiles Usim Profile Name 6
      description: Subscribers Service Profiles Usim Profile Name 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_6:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 6
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_6:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 6
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: ''
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: '//table//tr[6]/td[2]/p[2]/text()'
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_6:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 6
      description: Subscribers Service Profiles USIMs Profile Roaming Status 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_7:
      name: Subscribers Service Profiles Usim Profile Name 7
      description: Subscribers Service Profiles Usim Profile Name 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_7:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 7
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_7:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 7
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_7:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 7
      description: Subscribers Service Profiles USIMs Profile Roaming Status 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_8:
      name: Subscribers Service Profiles Usim Profile Name 8
      description: Subscribers Service Profiles Usim Profile Name 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_8:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 8
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_8:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 8
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_8:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 8
      description: Subscribers Service Profiles USIMs Profile Roaming Status 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_9:
      name: Subscribers Service Profiles Usim Profile Name 9
      description: Subscribers Service Profiles Usim Profile Name 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_9:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 9
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_9:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 9
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_9:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 9
      description: Subscribers Service Profiles USIMs Profile Roaming Status 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_name_10:
      name: Subscribers Service Profiles Usim Profile Name 10
      description: Subscribers Service Profiles Usim Profile Name 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_ul_10:
      name: Subscribers Service Profiles Usim Profile Ue Ambr UL 10
      description: Subscribers Service Profiles Usim Profile Ue UL Ambr 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[2]/p[1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR UL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_ue_ambr_dl_10:
      name: Subscribers Service Profiles Usim Profile Ue Ambr DL 10
      description: Subscribers Service Profiles Usim Profile Ue DL Ambr 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[2]/p[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpReplace '(.*(?<=UE AMBR DL[:]))' => ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_usim_profile_roaming_status_10:
      name: Subscribers Service Profiles USIMs Profile Roaming Status 10
      description: Subscribers Service Profiles USIMs Profile Roaming Status 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_usims_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[3]/button[@id="usim-act-submit"]//@title'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_1:
      name: Subscribers Service Profiles Apn Profile name 1
      description: Subscribers Service Profiles Apn Profile name 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_1:
      name: Subscribers Service Profiles Apn Profile Apn 1
      description: Subscribers Service Profiles Apn Profile Apn 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_1:
      name: Subscribers Service Profiles Apn Profile Qos 4g 1
      description: Subscribers Service Profiles Apn Profile Qos 4g 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[1]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_2:
      name: Subscribers Service Profiles Apn Profile name 2
      description: Subscribers Service Profiles Apn Profile name 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_2:
      name: Subscribers Service Profiles Apn Profile Apn 2
      description: Subscribers Service Profiles Apn Profile Apn 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_2:
      name: Subscribers Service Profiles Apn Profile Qos 4g 2
      description: Subscribers Service Profiles Apn Profile Qos 4g 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[2]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_3:
      name: Subscribers Service Profiles Apn Profile name 3
      description: Subscribers Service Profiles Apn Profile name 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_3:
      name: Subscribers Service Profiles Apn Profile Apn 3
      description: Subscribers Service Profiles Apn Profile Apn 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_3:
      name: Subscribers Service Profiles Apn Profile Qos 4g 3
      description: Subscribers Service Profiles Apn Profile Qos 4g 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[3]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_4:
      name: Subscribers Service Profiles Apn Profile name 4
      description: Subscribers Service Profiles Apn Profile name 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_4:
      name: Subscribers Service Profiles Apn Profile Apn 4
      description: Subscribers Service Profiles Apn Profile Apn 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_4:
      name: Subscribers Service Profiles Apn Profile Qos 4g 4
      description: Subscribers Service Profiles Apn Profile Qos 4g 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[4]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_5:
      name: Subscribers Service Profiles Apn Profile name 5
      description: Subscribers Service Profiles Apn Profile name 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_5:
      name: Subscribers Service Profiles Apn Profile Apn 5
      description: Subscribers Service Profiles Apn Profile Apn 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_5:
      name: Subscribers Service Profiles Apn Profile Qos 4g 5
      description: Subscribers Service Profiles Apn Profile Qos 4g 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[5]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_6:
      name: Subscribers Service Profiles Apn Profile name 6
      description: Subscribers Service Profiles Apn Profile name 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_6:
      name: Subscribers Service Profiles Apn Profile Apn 6
      description: Subscribers Service Profiles Apn Profile Apn 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_6:
      name: Subscribers Service Profiles Apn Profile Qos 4g 6
      description: Subscribers Service Profiles Apn Profile Qos 4g 6
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[6]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_7:
      name: Subscribers Service Profiles Apn Profile name 7
      description: Subscribers Service Profiles Apn Profile name 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_7:
      name: Subscribers Service Profiles Apn Profile Apn 7
      description: Subscribers Service Profiles Apn Profile Apn 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_7:
      name: Subscribers Service Profiles Apn Profile Qos 4g 7
      description: Subscribers Service Profiles Apn Profile Qos 4g 7
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[7]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_8:
      name: Subscribers Service Profiles Apn Profile name 8
      description: Subscribers Service Profiles Apn Profile name 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_8:
      name: Subscribers Service Profiles Apn Profile Apn 8
      description: Subscribers Service Profiles Apn Profile Apn 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_8:
      name: Subscribers Service Profiles Apn Profile Qos 4g 8
      description: Subscribers Service Profiles Apn Profile Qos 4g 8
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[8]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_9:
      name: Subscribers Service Profiles Apn Profile name 9
      description: Subscribers Service Profiles Apn Profile name 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_9:
      name: Subscribers Service Profiles Apn Profile Apn 9
      description: Subscribers Service Profiles Apn Profile Apn 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_9:
      name: Subscribers Service Profiles Apn Profile Qos 4g 9
      description: Subscribers Service Profiles Apn Profile Qos 4g 9
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[9]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_name_10:
      name: Subscribers Service Profiles Apn Profile name 10
      description: Subscribers Service Profiles Apn Profile name 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[1]/a/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_apn_10:
      name: Subscribers Service Profiles Apn Profile Apn 10
      description: Subscribers Service Profiles Apn Profile Apn 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    subscribers_service_profiles_apn_profile_qos_4g_10:
      name: Subscribers Service Profiles Apn Profile Qos 4g 10
      description: Subscribers Service Profiles Apn Profile Qos 4g 10
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_apn_profile}'
        requires: []
        selector:
          type: xpath
          expression: '//table//tr[10]/td[4]/span/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_legacy_mme_active_users:
      name: Monitor System Legacy MME Active Users
      description: Monitor System Legacy MME Active Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //mme/users_connected/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_legacy_mme_active_sessions:
      name: Monitor System Legacy MME Active Sessions
      description: Monitor System Legacy MME Active Sessions
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //mme/active_sessions/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_legacy_mme_active_radio_interfaces:
      name: Monitor System Legacy MME Active Radio Interfaces
      description: Monitor System Legacy MME Active Radio Interfaces
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //mme/active_radio_interfaces/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_emme_active_users:
      name: Monitor System eMME Active Users
      description: Monitor System eMME Active Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //emme/users_connected/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_emme_active_radio_interfaces:
      name: Monitor System eMME Active Radio Interfaces
      description: Monitor System eMME Active Radio Interfaces
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //emme/active_radio_interfaces/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_total_dl:
      name: Monitor System Total DL
      description: Monitor System Total DL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //total_dl/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_system_total_ul:
      name: Monitor System Total UL
      description: Monitor System Total UL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_stats}'
        requires: []
        selector:
          type: xpath
          expression: //total_ul/text()
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_legacy_mme_connected_user:
      name: Monitor Legacy MME Connected Users
      description: Monitor Legacy MME Connected Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_mme}'
        requires: []
        selector:
          type: xpath
          expression: '//users_connected/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_idle_user:
      name: Monitor Legacy MME Idle Users
      description: Monitor Legacy MME Idle Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_mme}'
        requires: []
        selector:
          type: xpath
          expression: '//users_idle/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_traffic_ul:
      name: Monitor Legacy MME Traffic UL
      description: Monitor Legacy MME Traffic UL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_mme}'
        requires: []
        selector:
          type: xpath
          expression: '//traffic_ul/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_legacy_mme_traffic_dl:
      name: Monitor Legacy MME Traffic DL
      description: Monitor Legacy MME Traffic DL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_mme}'
        requires: []
        selector:
          type: xpath
          expression: '//traffic_dl/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_hlr_hss_authentication_request:
      name: Monitor HLR/HSS Authentication Request
      description: Monitor HLR/HSS Authentication Request
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hlr_hss}'
        requires: []
        selector:
          type: xpath
          expression: '//auth_requests/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_location_updates:
      name: Monitor HLR/HSS Location Updates
      description: Monitor HLR/HSS Location Updates
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hlr_hss}'
        requires: []
        selector:
          type: xpath
          expression: '//location_updates/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_provisioned_users:
      name: Monitor HLR/HSS Provisioned Users
      description: Monitor HLR/HSS Provisioned Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hlr_hss}'
        requires: []
        selector:
          type: xpath
          expression: '//provisioned_users/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_registered_users:
      name: Monitor HLR/HSS Registered Users
      description: Monitor HLR/HSS Registered Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hlr_hss}'
        requires: []
        selector:
          type: xpath
          expression: '//roaming_users/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_cpu_utilised:
      name: Monitor Hardware CPU Utilised
      description: Monitor Hardware CPU Utilised
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]root[>]).*?(?=[<][\/]root[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]cpu_system_time[>]).*?(?=[<][/]cpu_system_time[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]cpu_user_time[>]).*?(?=[<][/]cpu_user_time[>]))' => $1
            4: 'add %{1}'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: '%'
          instructions: {}
    monitor_hardware_cpu_load_avg_per_1m:
      name: Monitor Hardware CPU Load Average Per 1 min
      description: Monitor Hardware CPU Load Average Per 1 min
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]cpu_load_1m[>]).*?(?=[<][/]cpu_load_1m[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_cpu_load_avg_per_5m:
      name: Monitor Hardware CPU Load Average Per 5 min
      description: Monitor Hardware CPU Load Average Per 5 min
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]cpu_load_5m[>]).*?(?=[<][/]cpu_load_5m[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_cpu_load_avg_per_15m:
      name: Monitor Hardware CPU Load Average Per 15 min
      description: Monitor Hardware CPU Load Average Per 15 min
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]cpu_load_15m[>]).*?(?=[<][/]cpu_load_15m[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_ram_used:
      name: Monitor Hardware RAM Used
      description: Monitor Hardware RAM Used
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]root[>]).*?(?=[<][\/]root[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]mem_available[>]).*?(?=[<][/]mem_available[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]mem_total_cached[>]).*?(?=[<][/]mem_total_cached[>]))' => $1
            4: use %{0}
            5: regexpExtract '((?<=[<]mem_buffered[>]).*?(?=[<][/]mem_buffered[>]))' => $1
            6: use %{0}
            7: regexpExtract '((?<=[<]mem_total[>]).*?(?=[<][/]mem_total[>]))' => $1
            8: 'sub %{1}'
            9: 'sub %{3}'
            10: 'sub %{5}'
            11: 'div 1048576'
            12: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'GB'
          instructions: {}
    monitor_hardware_ram_utilised:
      name: Monitor Hardware RAM Utilised
      description: Monitor Hardware RAM Utilised
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]root[>]).*?(?=[<][\/]root[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]mem_available[>]).*?(?=[<][/]mem_available[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]mem_total_cached[>]).*?(?=[<][/]mem_total_cached[>]))' => $1
            4: use %{0}
            5: regexpExtract '((?<=[<]mem_buffered[>]).*?(?=[<][/]mem_buffered[>]))' => $1
            6: use %{0}
            7: regexpExtract '((?<=[<]mem_total[>]).*?(?=[<][/]mem_total[>]))' => $1
            8: 'sub %{1}'
            9: 'sub %{3}'
            10: 'sub %{5}'
            11: use %{0}
            12: regexpExtract '((?<=[<]mem_total[>]).*?(?=[<][/]mem_total[>]))' => $1
            13: use %{10}
            14: 'div %{12}'
            15: 'mul 100'
            16: 'formatFloat f 0'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: '%'
          instructions: {}
    monitor_hardware_ram_capacity:
      name: Monitor Hardware RAM Capacity
      description: Monitor Hardware RAM Capacity
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]root[>]).*?(?=[<][\/]root[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]mem_total[>]).*?(?=[<][/]mem_total[>]))' => $1
            2: 'div 1048576'
            3: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'GB'
          instructions: {}
    monitor_hardware_storage_used:
      name: Monitor Hardware Storage Used
      description: Monitor Hardware Storage Used
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[1]
            2: regexpExtract '((?<=[<]used[>]).*?(?=[<][/]used[>]))' => $1
            3: 'div 1048576'
            4: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'GB'
          instructions: {}
    monitor_hardware_storage_capacity:
      name: Monitor Hardware Storage Capacity
      description: Monitor Hardware Storage Capacity
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[1]
            2: regexpExtract '((?<=[<]size[>]).*?(?=[<][/]size[>]))' => $1
            3: 'div 1048576'
            4: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'GB'
          instructions: {}
    monitor_hardware_storage_utilised:
      name: Monitor Hardware Storage Utilised
      description: Monitor Hardware Storage Utilised
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[1]
            2: regexpExtract '((?<=[<]size[>]).*?(?=[<][/]size[>]))' => $1
            3: use %{1}
            4: regexpExtract '((?<=[<]used[>]).*?(?=[<][/]used[>]))' => $1
            5: 'div %{2}'
            6: 'mul 100'
            7: 'formatFloat f 0'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: '%'
          instructions: {}
    monitor_hardware_storage_shared_used:
      name: Monitor Hardware Storage Shared Used
      description: Monitor Hardware Storage Shared Used
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[2]
            2: regexpExtract '((?<=[<]used[>]).*?(?=[<][/]used[>]))' => $1
            3: 'div 1024'
            4: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_hardware_storage_shared_capacity:
      name: Monitor Hardware Storage Shared Capacity
      description: Monitor Hardware Storage Shared Capacity
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[2]
            2: regexpExtract '((?<=[<]size[>]).*?(?=[<][/]size[>]))' => $1
            3: 'div 1048576'
            4: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'GB'
          instructions: {}
    monitor_hardware_storage_shared_utilised:
      name: Monitor Hardware Storage Shared Utilised
      description: Monitor Hardware Storage Shared Utilised
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]storages[>]).*?(?=[<][\/]storages[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: xpath //list-item[2]
            2: regexpExtract '((?<=[<]size[>]).*?(?=[<][/]size[>]))' => $1
            3: use %{1}
            4: regexpExtract '((?<=[<]used[>]).*?(?=[<][/]used[>]))' => $1
            5: 'div %{2}'
            6: 'mul 100'
            7: 'formatFloat f 0'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: '%'
          instructions: {}
    monitor_hardware_local_time:
      name: Monitor Hardware Local Time
      description: Monitor Hardware Local Time
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_local_time}'
        requires: []
        selector:
          type: xpath
          expression: '//start/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_local_host_name:
      name: Monitor Legacy MME S1 Interfaces Local Host Name
      description: Monitor Legacy MME S1 Interfaces Local Host Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteHumanName[>]).*?(?=[<][/]iLteHumanName[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_primary_local_ip:
      name: Monitor Legacy MME S1 Interfaces Primary Local Ip
      description: Monitor Legacy MME S1 Interfaces Primary Local Ip
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteAddress[>]).*?(?=[<][/]iLteAddress[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_enodeb_id:
      name: Monitor Legacy MME S1 Interfaces Enodeb Id
      description: Monitor Legacy MME S1 Interfaces Enodeb Id
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteENBId[>]).*?(?=[<][/]iLteENBId[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_connected_users:
      name: Monitor Legacy MME S1 Interfaces Connected Users
      description: Monitor Legacy MME S1 Interfaces Connected Users
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteConnectedUsers[>]).*?(?=[<][/]iLteConnectedUsers[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_total_ul:
      name: Monitor APN Total UL
      description: Monitor APN Total UL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//internet/aPNRowUplinkBytes/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_total_dl:
      name: Monitor APN Total DL
      description: Monitor APN Total DL
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//internet/aPNRowDownlinkBytes/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_total_traffic:
      name: Monitor APN Total Traffic
      description: Monitor APN Total Traffic
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//internet'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_apns_traffic_name_1:
      name: Monitor APN Apns Traffic Name 1
      description: Monitor APN Apns Traffic Name 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey[1][1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_ul_1:
      name: Monitor APN Apns Traffic Throughput UL 1
      description: Monitor APN Apns Traffic Throughput UL 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkThroughput[1][1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_dl_1:
      name: Monitor APN Apns Traffic Throughput DL 1
      description: Monitor APN Apns Traffic Throughput DL 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkThroughput[1][1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_ul_1:
      name: Monitor APN Apns Traffic UL 1
      description: Monitor APN Apns Traffic UL 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkBytes[1][1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_apns_traffic_dl_1:
      name: Monitor APN Apns Traffic DL 1
      description: Monitor APN Apns Traffic DL 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkBytes[1][1]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'div 1048572'
            2: regexpExtract '(\d+[.]\d{2})' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_apns_traffic_total_traffic_1:
      name: Monitor APN Apns Traffic Total Traffic 1
      description: Monitor APN Apns Traffic Total Traffic 1
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey/..[1][1]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: 'MB'
          instructions: {}
    monitor_apn_apns_traffic_name_2:
      name: Monitor APN Apns Traffic Name 2
      description: Monitor APN Apns Traffic Name 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey[1][2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_ul_2:
      name: Monitor APN Apns Traffic Throughput UL 2
      description: Monitor APN Apns Traffic Throughput UL 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkThroughput[1][2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_dl_2:
      name: Monitor APN Apns Traffic Throughput DL 2
      description: Monitor APN Apns Traffic Throughput DL 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkThroughput[1][2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_ul_2:
      name: Monitor APN Apns Traffic UL 2
      description: Monitor APN Apns Traffic UL 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkBytes[1][2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_dl_2:
      name: Monitor APN Apns Traffic DL 2
      description: Monitor APN Apns Traffic DL 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkBytes[1][2]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_total_traffic_2:
      name: Monitor APN Apns Traffic Total Traffic 2
      description: Monitor APN Apns Traffic Total Traffic 2
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: 
          expression: '//aPNRowApnKey/..[1][2]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_name_3:
      name: Monitor APN Apns Traffic Name 3
      description: Monitor APN Apns Traffic Name 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey[1][3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_ul_3:
      name: Monitor APN Apns Traffic Throughput UL 3
      description: Monitor APN Apns Traffic Throughput UL 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkThroughput[1][3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_dl_3:
      name: Monitor APN Apns Traffic Throughput DL 3
      description: Monitor APN Apns Traffic Throughput DL 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkThroughput[1][3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_ul_3:
      name: Monitor APN Apns Traffic UL 3
      description: Monitor APN Apns Traffic UL 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkBytes[1][3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_dl_3:
      name: Monitor APN Apns Traffic DL 3
      description: Monitor APN Apns Traffic DL 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkBytes[1][3]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_total_traffic_3:
      name: Monitor APN Apns Traffic Total Traffic 3
      description: Monitor APN Apns Traffic Total Traffic 3
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: 
          expression: '//aPNRowApnKey/..[1][3]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_name_4:
      name: Monitor APN Apns Traffic Name 4
      description: Monitor APN Apns Traffic Name 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey/..[1][4]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_ul_4:
      name: Monitor APN Apns Traffic Throughput UL 4
      description: Monitor APN Apns Traffic Throughput UL 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkThroughput[1][4]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_dl_4:
      name: Monitor APN Apns Traffic Throughput DL 4
      description: Monitor APN Apns Traffic Throughput DL 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkThroughput[1][4]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_ul_4:
      name: Monitor APN Apns Traffic UL 4
      description: Monitor APN Apns Traffic UL 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkBytes[1][4]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_dl_4:
      name: Monitor APN Apns Traffic DL 4
      description: Monitor APN Apns Traffic DL 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkBytes[1][4]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_total_traffic_4:
      name: Monitor APN Apns Traffic Total Traffic 4
      description: Monitor APN Apns Traffic Total Traffic 4
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: 
          expression: '//aPNRowApnKey/..[1][4]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_name_5:
      name: Monitor APN Apns Traffic Name 5
      description: Monitor APN Apns Traffic Name 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowApnKey/..[1][5]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_ul_5:
      name: Monitor APN Apns Traffic Throughput UL 5
      description: Monitor APN Apns Traffic Throughput UL 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkThroughput[1][5]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_throughput_dl_5:
      name: Monitor APN Apns Traffic Throughput DL 5
      description: Monitor APN Apns Traffic Throughput DL 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkThroughput[1][5]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_ul_5:
      name: Monitor APN Apns Traffic UL 5
      description: Monitor APN Apns Traffic UL 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowUplinkBytes[1][5]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_dl_5:
      name: Monitor APN Apns Traffic DL 5
      description: Monitor APN Apns Traffic DL 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: xpath
          expression: '//aPNRowDownlinkBytes[1][5]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_apn_apns_traffic_total_traffic_5:
      name: Monitor APN Apns Traffic Total Traffic 5
      description: Monitor APN Apns Traffic Total Traffic 5
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_monitor_apn}'
        requires: []
        selector:
          type: 
          expression: '//aPNRowApnKey/..[1][5]'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: regexpExtract '((?<=[<]aPNRowDownlinkBytes[>]).*(?=[<][/]aPNRowDownlinkBytes[>]))' => $1
            2: use %{0}
            3: regexpExtract '((?<=[<]aPNRowUplinkBytes[>]).*(?=[<][/]aPNRowUplinkBytes[>]))' => $1
            4: 'add %{1}'
            5: 'div 1048572'
            6: 'formatFloat f 2'
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    total_counters:
      name: Total Counters
      description: Total Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Total"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    connected_counters:
      name: Connected Counters
      description: Connected Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Connected"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    idle_counters:
      name: Idle Counters
      description: Idle Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Idle"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    deregistered_counters:
      name: Deregistered Counters
      description: Deregistered Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Deregistered"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    total_load_dl_counters:
      name: Total Load DL Counters
      description: Total Load DL Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Total load DL"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_local_host_name:
      name: Monitor HLR/HSS Diameter Local Host Name
      description: Monitor HLR/HSS Diameter Local Host Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterLocalHostName[>]).*(?=[<]\/iDiameterLocalHostName[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_primary_local_ip:
      name: Monitor HLR/HSS Diameter Primary Local Ip
      description: Monitor HLR/HSS Diameter Primary Local Ip
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:  
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterLocalAddress[>]).*(?=[<]\/iDiameterLocalAddress[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_primary_remote_ip:
      name: Monitor HLR/HSS Diameter Primary Remote Ip
      description: Monitor HLR/HSS Diameter Primary Remote Ip
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:  
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterPeerAddress[>]).*(?=[<]\/iDiameterPeerAddress[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_transport_type:
      name: Monitor HLR/HSS Diameter Transport Type
      description: Monitor HLR/HSS Diameter Transport Type
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:  
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterTransportType[>]).*(?=[<]\/iDiameterTransportType[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_transport_status:
      name: Monitor HLR/HSS Diameter Transport Status
      description: Monitor HLR/HSS Diameter Transport Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterTransportState[>]).*(?=[<]\/iDiameterTransportState[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_status:
      name: Monitor HLR/HSS Diameter Status
      description: Monitor HLR/HSS Diameter Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:  
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterState[>]).*(?=[<]\/iDiameterState[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_local_host_name:
      name: Monitor Legacy MME Diameter Local Host Name
      description: Monitor Legacy MME Diameter Local Host Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterLocalHostName[>]).*(?=[<]\/iDiameterLocalHostName[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_primary_local_ip:
      name: Monitor Legacy MME Diameter Primary Local Ip
      description: Monitor Legacy MME Diameter Primary Local Ip
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterLocalAddress[>]).*(?=[<]\/iDiameterLocalAddress[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_primary_remote_ip:
      name: Monitor Legacy MME Diameter Primary Remote Ip
      description: Monitor Legacy MME Diameter Primary Remote Ip
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterPeerAddress[>]).*(?=[<]\/iDiameterPeerAddress[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_transport_type:
      name: Monitor Legacy MME Diameter Transport Type
      description: Monitor Legacy MME Diameter Transport Type
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterTransportType[>]).*(?=[<]\/iDiameterTransportType[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_transport_status:
      name: Monitor Legacy MME Diameter Transport Status
      description: Monitor Legacy MME Diameter Transport Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterTransportState[>]).*(?=[<]\/iDiameterTransportState[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_status:
      name: Monitor Legacy MME Diameter Status
      description: Monitor Legacy MME Diameter Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:   
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1
            2: regexpExtract '((?<=[<]iDiameterState[>]).*(?=[<]\/iDiameterState[>]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_manufacturer:
      name: Monitor Hardware Manufacturer
      description: Monitor Hardware Manufacturer
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hardware}'
        requires: []
        selector:
          type: xpath
          expression: '//script[contains(text(),"REVISION")]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?<=hardware_manufacturer[:][ ]["]).*(?=["][,]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_products_name:
      name: Monitor Hardware Products Name
      description: Monitor Hardware Products Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hardware}'
        requires: []
        selector:
          type: xpath
          expression: '//script[contains(text(),"REVISION")]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?<=hardware_product_name[:][ ]["]).*(?=["]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hardware_host_name:
      name: Monitor Hardware Host Name
      description: Monitor Hardware Host Name
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hardware}'
        requires: []
        selector:
          type: xpath
          expression: '//script[contains(text(),"REVISION")]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?<=window.HOSTNAME[ ][=][ ]["]).*?(?=["]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_revision:
      name: Monitor System Revision
      description: Monitor System Revision
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_hardware}'
        requires: []
        selector:
          type: xpath
          expression: '//script[contains(text(),"REVISION")]/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?<=window.REVISION[ ][=][ ]["]).*?(?=["]))' => $1
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_license_status:
      name: Monitor System License Status
      description: Monitor System License Status
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_sanity}'
        requires: []
        selector:
          type: xpath
          expression: '//state/str/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    total_load_ul_counters:
      name: Total Load UL Counters
      description: Total Load UL Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Total load UL"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    active_sessions_counters:
      name: Active Sessions Counters
      description: Active Sessions Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Active sessions"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    attach_reject_plmn_not_allowed_counters:
      name: Attach Reject Plmn Not Allowed Counters
      description: Attach Reject Plmn Not Allowed Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Attach Reject (PLMN Not Allowed) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    attach_reject_roaming_not_allowed_counters:
      name: Attach Reject Roaming Not Allowed Counters
      description: Attach Reject Roaming Not Allowed Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Attach Reject (Roaming Not Allowed) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    attach_reject_illegal_ms_counters:
      name: Attach Reject Illegal Ms Counters
      description: Attach Reject Illegal Ms Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Attach Reject (Illegal MS) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    total_attach_request_counters:
      name: Total Attach Request Counters
      description: Total Attach Request Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Total attach request (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    successful_attach_counters:
      name: Successful Attach Counters
      description: Successful Attach Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Successful attach (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    successful_attach_rate_counters:
      name: Successful Attach Rate Counters
      description: Successful Attach Rate Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Successful attach rate (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    total_session_activation_request_counters:
      name: Total Session Activation Request Counters
      description: Total Session Activation Request Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Total Session activation request (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    successful_activated_sessions_counters:
      name: Successful Activated Sessions Counters
      description: Successful Activated Sessions Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Successful Activated Sessions (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    successful_session_rate_counters:
      name: Successful Session Rate Counters
      description: Successful Session Rate Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Successful Session Rate (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    session_request_reject_resource_unav_counters:
      name: Session Request Reject Resource Unav Counters
      description: Session Request Reject Resource Unav Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Session request reject (Resource unav.) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    session_request_reject_unknown_apn_counters:
      name: Session Request Reject Unknown Apn Counters
      description: Session Request Reject Unknown Apn Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Session request reject (Unknown APN) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    session_request_reject_service_not_sub_counters:
      name: Session Request Reject Service Not Sub Counters
      description: Session Request Reject Service Not Sub Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Session request reject (Service not sub) (*)"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    last_reset_counters:
      name: Last Reset Counters
      description: Last Reset Counters
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_counters}'
        requires: []
        selector:
          type: xpath
          expression: '//td[text()="Last Reset"]/following-sibling::td/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_license_status_alarm:
      name: Monitor System License Alarm
      description: Monitor System License Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_sanity}'
        requires: []
        selector:
          type: xpath
          expression: '//state/str/text()'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: |
              switch
              "%{0}" == "valid" : "valid"
              "%{0}" == "" : "disconnected"
              default: "Unvalid"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_dra_alarm:
      name: Monitor System Processes DRA Alarm
      description: Monitor System Processes DRA Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]dra[>]).*?(?=[<][\/]dra[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_legacy_mme_alarm:
      name: Monitor System Processes Legacy MME Alarm
      description: Monitor System Processes Legacy MME Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]mme[>]).*(?=[<][\/]mme[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_cgw_alarm:
      name: Monitor System Processes CGW Alarm
      description: Monitor System Processes CGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]cgw[>]).*(?=[<][\/]cgw[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_sgw_alarm:
      name: Monitor System Processes SGW Alarm
      description: Monitor System Processes SGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]sgw[>]).*(?=[<][\/]sgw[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_cbc_alarm:
      name: Monitor System Processes CBC Alarm
      description: Monitor System Processes CBC Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]cbc[>]).*(?=[<][\/]cbc[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_pcrf_alarm:
      name: Monitor System Processes PCRF Alarm
      description: Monitor System Processes PCRF Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]pcrf[>]).*(?=[<][\/]pcrf[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_ggsn_pgw_alarm:
      name: Monitor System Processes GGSN PGW Alarm
      description: Monitor System Processes GGSN PGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]pgw[>]).*(?=[<][\/]pgw[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_sms_proxy_alarm:
      name: Monitor System Processes SMS Proxy Alarm
      description: Monitor System Processes SMS Proxy Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]smsp[>]).*(?=[<][\/]smsp[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_user_plane_alarm:
      name: Monitor System Processes User Plane Alarm
      description: Monitor System Processes User Plane Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]ual[>]).*(?=[<][\/]ual[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_hlr_hss_alarm:
      name: Monitor System Processes HLR HSS Alarm
      description: Monitor System Processes HLR HSS Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]hss[>]).*(?=[<][\/]hss[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_snmp_subagent_alarm:
      name: Monitor System Processes SNMP Subagent Alarm
      description: Monitor System Processes SNMP Subagent Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]epc_snmp[>]).*(?=[<][\/]epc_snmp[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_system_processes_stats_manager_alarm:
      name: Monitor System Processes Stats Manager Alarm
      description: Monitor System Processes Stats Manager Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_machine}'
        requires: []
        selector:
          type: regexp
          expression: '((?<=[<]statsman[>]).*(?=[<][\/]statsman[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath //active/text()'
            2: toLower
            3: |
              switch
              "%{2}" == "true" : "Active"
              "%{2}" == "false" : "Inactive"
              default: ""
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_dra_alarm:
      name: Processes DRA Alarm
      description: Processes DRA Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="DRA"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_emme_alarm:
      name: Processes eMME Alarm
      description: Processes eMME Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="MME"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              default: "disconnected"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_legacy_mme_alarm:
      name: Processes Legacy MME Alarm
      description: Processes Legacy MME Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="MME (OLD)"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              default: "disconnected"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_cbc_alarm:
      name: Processes CBC Alarm
      description: Processes CBC Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="CBC"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_pcrf_alarm:
      name: Processes PCRF Alarm
      description: Processes PCRF Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="PCRF"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_cgw_alarm:
      name: Processes CGW Alarm
      description: Processes CGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="CGW"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running" 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_sgw_alarm:
      name: Processes SGW Alarm
      description: Processes SGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="SGW"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_ggsn_pgw_alarm:
      name: Processes GGSN/PGW Alarm
      description: Processes GGSN/PGW Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="GGSN/PGW"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_sms_proxy_alarm:
      name: Processes SMS Proxy Alarm
      description: Processes SMS Proxy Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="SMS PROXY"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running" 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_user_plane_alarm:
      name: Processes User Plane Alarm
      description: Processes User Plane Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="USER PLANE"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_hlr_hss_alarm:
      name: Processes HLR/HSS Alarm
      description: Processes HLR/HSS Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="HLR/HSS"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_snmp_sub_agent_alarm:
      name: Processes SNMP Sub Agent Alarm
      description: Processes SNMP Sub Agent Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="SNMP SUBAGENT"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running"  
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    processes_stats_manager_alarm:
      name: Processes Stats Manager Alarm
      description: Processes Stats Manager Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_processes}'
        requires: []
        selector:
          type: xpath
          expression: '//table'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: 'xpath count(//th[text()="Running/not Running"]/preceding-sibling::*)+1'
            2: use %{0}
            3: 'xpath //*[text()="STATS MANAGER"]/../td[position()=%{1}]/span/text()'
            4: |
              switch
              "%{3}" == "Running" : "running"
              "%{3}" == "" : "disconnected"
              default: "not_running" 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_alarm:
      name: Monitor HLR/HSS Diameter Alarm
      description: Monitor HLR/HSS Diameter Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:  
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1
            2: regexpExtract '((?<=[<]iDiameterState[>]).*(?=[<]\/iDiameterState[>]))' => $1
            3: |
              switch
              "%{2}" == "up" : "up"
              "%{2}" == "" : "disconnected"
              default: "down"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_hlr_hss_diameter_transport_alarm:
      name: Monitor HLR/HSS Diameter Transport Alarm
      description: Monitor HLR/HSS Diameter Transport Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?=[<]hss:).*?(?=[<][/]hss:))' => $1 
            2: regexpExtract '((?<=[<]iDiameterTransportState[>]).*(?=[<]\/iDiameterTransportState[>]))' => $1
            3: |
              switch
              "%{2}" == "up" : "up"
              "%{2}" == "" : "disconnected"
              default: "down"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_transport_alarm:
      name: Monitor Legacy MME Diameter Transport Alarm
      description: Monitor Legacy MME Diameter Transport Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1 
            2: regexpExtract '((?<=[<]iDiameterTransportState[>]).*(?=[<]\/iDiameterTransportState[>]))' => $1
            3: |
              switch
              "%{2}" == "up" : "up"
              "%{2}" == "" : "disconnected"
              default: "down"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_diameter_alarm:
      name: Monitor Legacy MME Diameter Alarm
      description: Monitor Legacy MME Diameter Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_diameter}'
        requires: []
        selector:
          type: regexp
          expression: '((?=[<]root[>]).*(?!=[<][/]root[>]))'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters: 
            1: regexpExtract '((?=[<]mme:).*?(?=[<][/]mme:))' => $1 
            2: regexpExtract '((?<=[<]iDiameterState[>]).*(?=[<]\/iDiameterState[>]))' => $1
            3: |
              switch
              "%{2}" == "up" : "up"
              "%{2}" == "" : "disconnected"
              default: "down"
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_link_status_alarm:
      name: Monitor Legacy MME S1 Interfaces Link Alarm
      description: Monitor Legacy MME S1 Interfaces Link Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteSCTPState[>]).*?(?=[<][/]iLteSCTPState[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: |
              switch
              "%{0}" == "up" : "up"
              "%{0}" == "down" : "down"
              default: "disconnected" 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
    monitor_legacy_mme_s1_interfaces_s1_ap_status_alarm:
      name: Monitor Legacy MME S1 Interfaces S1Ap Alarm
      description: Monitor Legacy MME S1 Interfaces S1Ap Alarm
      conditions:
        read: []
        delete: []
      attributes:
        dataSource: '%{engine.http.requests.get_s1_interfaces}'
        requires: []
        selector:
          type: regexp
          expression: '(?<=[<]iLteS1APState[>]).*?(?=[<][/]iLteS1APState[>])'
          selectors: {}
        lookup: {}
        extractor:
          keys: []
          transform: ''
          filters:
            1: |
              switch
              "%{0}" == "up" : "up"
              "%{0}" == "down" : "down"
              default: "disconnected" 
          mapper: ''
          parameters: {}
        dataSink: ''
      properties:
        readWrite: R
        read:
          type: String
          unit: ''
          instructions: {}
  filters:
    mappers:
      diameter_alarm:
        keyType: String
        valueType: String
        map:
          'up': Normal
          'down': Severe
          'disconnected': Disconnected
      system_processes_alarm:
        keyType: String
        valueType: String
        map:
          'Active': Normal
          'Inactive': Disconnected
      alarm_2:      #Critical mappings
        keyType: String
        valueType: String
        map:
          'running': Normal
          'not_running': Critical
          'disconnected': Disconnected
      alarm_1:      #severe mappings
        keyType: String
        valueType: String
        map:
          'running': Normal
          'not_running': Severe
          'disconnected': Disconnected
      license_alarm:
        keyType: String
        valueType: String
        map:
          'valid': Normal
          'Unvalid': Critical
          'disconnected': Disconnected
      s1_ap_alarm:
        keyType: String
        valueType: String
        map:
          'disconnected': Disconnected
          'up': Normal
          'down': Severe